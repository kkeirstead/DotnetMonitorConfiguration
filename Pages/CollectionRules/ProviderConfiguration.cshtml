@page
@using DotnetMonitorConfiguration.Models
@using System.ComponentModel.DataAnnotations
@using DotnetMonitorConfiguration.Models.BorrowedFromDM
@model ProviderConfigurationModel

<form method="post">
    <div class="row-narrow">
      <fieldset>
        @{
            int index = 0;
        }
        @foreach(var propertyInfo in typeof(EventPipeProvider).GetProperties())
        {
            Type currType = General.GetType(@propertyInfo.PropertyType);

            string nameValue = General.GenerateNameValue(propertyInfo);

            <div class="label">@nameValue</div>

            <div class="sub-label">@General.GetFormatDescription(currType)</div>

            if (currType.IsEnum || (currType == typeof(bool)))
            {
                string val = ProviderConfigurationModel.GetCurrValue(propertyInfo);

                List<string> names = General.GetEnumNames(currType, Attribute.IsDefined(propertyInfo, typeof(RequiredAttribute)));

                <select asp-for=properties[propertyInfo.Name]>
                    @foreach (var enumName in names)
                    {
                        bool isSelected = val.Equals(enumName, StringComparison.CurrentCultureIgnoreCase);
                        <option value=@enumName selected=@isSelected>@enumName</option>
                    }
                </select>
            }
            else if (currType == typeof(Dictionary<string, string>))
            {
                <button class="submit-button" type="submit" asp-page-handler="AddKVP">New Argument</button>

                int kvpIndex = 0;
                foreach (var pair in ProviderConfigurationModel.GenerateKVPairs())
                {
                    <button class="submit-button" type="submit" asp-route-data=@kvpIndex.ToString() asp-page-handler="AccessKVP">@pair.Item1 | @pair.Item2</button>
                    ++kvpIndex;
                }

                --index; // We don't want to increment for a non-field
            }
            else
            {
                string val = ProviderConfigurationModel.GetCurrValue(propertyInfo);

                <input asp-for=properties[propertyInfo.Name] placeholder=@propertyInfo.Name value=@val/>
            }
            <br />
            ++index;
        }
        
      </fieldset>
    </div>
    <button class="submit-button" type="submit" asp-page-handler="Finished" id="submitButton">Submit</button>
</form>